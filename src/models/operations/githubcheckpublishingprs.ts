/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GithubCheckPublishingPRsRequest = {
  generateGenLockId: string;
  org: string;
  repo: string;
};

export type GithubCheckPublishingPRsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  githubPublishingPRResponse?:
    | components.GithubPublishingPRResponse
    | undefined;
};

/** @internal */
export const GithubCheckPublishingPRsRequest$inboundSchema: z.ZodType<
  GithubCheckPublishingPRsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  generate_gen_lock_id: z.string(),
  org: z.string(),
  repo: z.string(),
}).transform((v) => {
  return remap$(v, {
    "generate_gen_lock_id": "generateGenLockId",
  });
});

/** @internal */
export type GithubCheckPublishingPRsRequest$Outbound = {
  generate_gen_lock_id: string;
  org: string;
  repo: string;
};

/** @internal */
export const GithubCheckPublishingPRsRequest$outboundSchema: z.ZodType<
  GithubCheckPublishingPRsRequest$Outbound,
  z.ZodTypeDef,
  GithubCheckPublishingPRsRequest
> = z.object({
  generateGenLockId: z.string(),
  org: z.string(),
  repo: z.string(),
}).transform((v) => {
  return remap$(v, {
    generateGenLockId: "generate_gen_lock_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubCheckPublishingPRsRequest$ {
  /** @deprecated use `GithubCheckPublishingPRsRequest$inboundSchema` instead. */
  export const inboundSchema = GithubCheckPublishingPRsRequest$inboundSchema;
  /** @deprecated use `GithubCheckPublishingPRsRequest$outboundSchema` instead. */
  export const outboundSchema = GithubCheckPublishingPRsRequest$outboundSchema;
  /** @deprecated use `GithubCheckPublishingPRsRequest$Outbound` instead. */
  export type Outbound = GithubCheckPublishingPRsRequest$Outbound;
}

/** @internal */
export const GithubCheckPublishingPRsResponse$inboundSchema: z.ZodType<
  GithubCheckPublishingPRsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GithubPublishingPRResponse: components
    .GithubPublishingPRResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GithubPublishingPRResponse": "githubPublishingPRResponse",
  });
});

/** @internal */
export type GithubCheckPublishingPRsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GithubPublishingPRResponse?:
    | components.GithubPublishingPRResponse$Outbound
    | undefined;
};

/** @internal */
export const GithubCheckPublishingPRsResponse$outboundSchema: z.ZodType<
  GithubCheckPublishingPRsResponse$Outbound,
  z.ZodTypeDef,
  GithubCheckPublishingPRsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  githubPublishingPRResponse: components
    .GithubPublishingPRResponse$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    githubPublishingPRResponse: "GithubPublishingPRResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubCheckPublishingPRsResponse$ {
  /** @deprecated use `GithubCheckPublishingPRsResponse$inboundSchema` instead. */
  export const inboundSchema = GithubCheckPublishingPRsResponse$inboundSchema;
  /** @deprecated use `GithubCheckPublishingPRsResponse$outboundSchema` instead. */
  export const outboundSchema = GithubCheckPublishingPRsResponse$outboundSchema;
  /** @deprecated use `GithubCheckPublishingPRsResponse$Outbound` instead. */
  export type Outbound = GithubCheckPublishingPRsResponse$Outbound;
}
