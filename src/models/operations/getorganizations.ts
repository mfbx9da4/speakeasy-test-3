/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetOrganizationsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  organizations?: Array<components.Organization> | undefined;
};

/** @internal */
export const GetOrganizationsResponse$inboundSchema: z.ZodType<
  GetOrganizationsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Organizations: z.array(components.Organization$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Organizations": "organizations",
  });
});

/** @internal */
export type GetOrganizationsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Organizations?: Array<components.Organization$Outbound> | undefined;
};

/** @internal */
export const GetOrganizationsResponse$outboundSchema: z.ZodType<
  GetOrganizationsResponse$Outbound,
  z.ZodTypeDef,
  GetOrganizationsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  organizations: z.array(components.Organization$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    organizations: "Organizations",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrganizationsResponse$ {
  /** @deprecated use `GetOrganizationsResponse$inboundSchema` instead. */
  export const inboundSchema = GetOrganizationsResponse$inboundSchema;
  /** @deprecated use `GetOrganizationsResponse$outboundSchema` instead. */
  export const outboundSchema = GetOrganizationsResponse$outboundSchema;
  /** @deprecated use `GetOrganizationsResponse$Outbound` instead. */
  export type Outbound = GetOrganizationsResponse$Outbound;
}
