/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetWorkspaceByContextResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  workspaceAndOrganization?: components.WorkspaceAndOrganization | undefined;
};

/** @internal */
export const GetWorkspaceByContextResponse$inboundSchema: z.ZodType<
  GetWorkspaceByContextResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  WorkspaceAndOrganization: components.WorkspaceAndOrganization$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "WorkspaceAndOrganization": "workspaceAndOrganization",
  });
});

/** @internal */
export type GetWorkspaceByContextResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  WorkspaceAndOrganization?:
    | components.WorkspaceAndOrganization$Outbound
    | undefined;
};

/** @internal */
export const GetWorkspaceByContextResponse$outboundSchema: z.ZodType<
  GetWorkspaceByContextResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspaceByContextResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  workspaceAndOrganization: components.WorkspaceAndOrganization$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    workspaceAndOrganization: "WorkspaceAndOrganization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceByContextResponse$ {
  /** @deprecated use `GetWorkspaceByContextResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceByContextResponse$inboundSchema;
  /** @deprecated use `GetWorkspaceByContextResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceByContextResponse$outboundSchema;
  /** @deprecated use `GetWorkspaceByContextResponse$Outbound` instead. */
  export type Outbound = GetWorkspaceByContextResponse$Outbound;
}
