/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";

export type GetOASSummaryRequest = {
  namespaceName: string;
  revisionReference: string;
};

export type GetOASSummaryResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  oasSummary?: components.OASSummary | undefined;
  /**
   * Default error response
   */
  error?: errors.ErrorT | undefined;
};

/** @internal */
export const GetOASSummaryRequest$inboundSchema: z.ZodType<
  GetOASSummaryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  namespace_name: z.string(),
  revision_reference: z.string(),
}).transform((v) => {
  return remap$(v, {
    "namespace_name": "namespaceName",
    "revision_reference": "revisionReference",
  });
});

/** @internal */
export type GetOASSummaryRequest$Outbound = {
  namespace_name: string;
  revision_reference: string;
};

/** @internal */
export const GetOASSummaryRequest$outboundSchema: z.ZodType<
  GetOASSummaryRequest$Outbound,
  z.ZodTypeDef,
  GetOASSummaryRequest
> = z.object({
  namespaceName: z.string(),
  revisionReference: z.string(),
}).transform((v) => {
  return remap$(v, {
    namespaceName: "namespace_name",
    revisionReference: "revision_reference",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOASSummaryRequest$ {
  /** @deprecated use `GetOASSummaryRequest$inboundSchema` instead. */
  export const inboundSchema = GetOASSummaryRequest$inboundSchema;
  /** @deprecated use `GetOASSummaryRequest$outboundSchema` instead. */
  export const outboundSchema = GetOASSummaryRequest$outboundSchema;
  /** @deprecated use `GetOASSummaryRequest$Outbound` instead. */
  export type Outbound = GetOASSummaryRequest$Outbound;
}

/** @internal */
export const GetOASSummaryResponse$inboundSchema: z.ZodType<
  GetOASSummaryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  OASSummary: components.OASSummary$inboundSchema.optional(),
  Error: errors.ErrorT$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "OASSummary": "oasSummary",
    "Error": "error",
  });
});

/** @internal */
export type GetOASSummaryResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  OASSummary?: components.OASSummary$Outbound | undefined;
  Error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const GetOASSummaryResponse$outboundSchema: z.ZodType<
  GetOASSummaryResponse$Outbound,
  z.ZodTypeDef,
  GetOASSummaryResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  oasSummary: components.OASSummary$outboundSchema.optional(),
  error: errors.ErrorT$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    oasSummary: "OASSummary",
    error: "Error",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOASSummaryResponse$ {
  /** @deprecated use `GetOASSummaryResponse$inboundSchema` instead. */
  export const inboundSchema = GetOASSummaryResponse$inboundSchema;
  /** @deprecated use `GetOASSummaryResponse$outboundSchema` instead. */
  export const outboundSchema = GetOASSummaryResponse$outboundSchema;
  /** @deprecated use `GetOASSummaryResponse$Outbound` instead. */
  export type Outbound = GetOASSummaryResponse$Outbound;
}
