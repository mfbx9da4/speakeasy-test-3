/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";

export type GetActionRequest = {
  /**
   * The targetName of the workflow target.
   */
  targetName?: string | undefined;
  org: string;
  repo: string;
};

export type GetActionResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  githubGetActionResponse?: components.GithubGetActionResponse | undefined;
  /**
   * Default error response
   */
  error?: errors.ErrorT | undefined;
};

/** @internal */
export const GetActionRequest$inboundSchema: z.ZodType<
  GetActionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  targetName: z.string().optional(),
  org: z.string(),
  repo: z.string(),
});

/** @internal */
export type GetActionRequest$Outbound = {
  targetName?: string | undefined;
  org: string;
  repo: string;
};

/** @internal */
export const GetActionRequest$outboundSchema: z.ZodType<
  GetActionRequest$Outbound,
  z.ZodTypeDef,
  GetActionRequest
> = z.object({
  targetName: z.string().optional(),
  org: z.string(),
  repo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActionRequest$ {
  /** @deprecated use `GetActionRequest$inboundSchema` instead. */
  export const inboundSchema = GetActionRequest$inboundSchema;
  /** @deprecated use `GetActionRequest$outboundSchema` instead. */
  export const outboundSchema = GetActionRequest$outboundSchema;
  /** @deprecated use `GetActionRequest$Outbound` instead. */
  export type Outbound = GetActionRequest$Outbound;
}

/** @internal */
export const GetActionResponse$inboundSchema: z.ZodType<
  GetActionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GithubGetActionResponse: components.GithubGetActionResponse$inboundSchema
    .optional(),
  Error: errors.ErrorT$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GithubGetActionResponse": "githubGetActionResponse",
    "Error": "error",
  });
});

/** @internal */
export type GetActionResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GithubGetActionResponse?:
    | components.GithubGetActionResponse$Outbound
    | undefined;
  Error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const GetActionResponse$outboundSchema: z.ZodType<
  GetActionResponse$Outbound,
  z.ZodTypeDef,
  GetActionResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  githubGetActionResponse: components.GithubGetActionResponse$outboundSchema
    .optional(),
  error: errors.ErrorT$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    githubGetActionResponse: "GithubGetActionResponse",
    error: "Error",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActionResponse$ {
  /** @deprecated use `GetActionResponse$inboundSchema` instead. */
  export const inboundSchema = GetActionResponse$inboundSchema;
  /** @deprecated use `GetActionResponse$outboundSchema` instead. */
  export const outboundSchema = GetActionResponse$outboundSchema;
  /** @deprecated use `GetActionResponse$Outbound` instead. */
  export type Outbound = GetActionResponse$Outbound;
}
