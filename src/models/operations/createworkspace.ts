/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreateWorkspaceResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  workspace?: components.Workspace | undefined;
};

/** @internal */
export const CreateWorkspaceResponse$inboundSchema: z.ZodType<
  CreateWorkspaceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Workspace: components.Workspace$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Workspace": "workspace",
  });
});

/** @internal */
export type CreateWorkspaceResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Workspace?: components.Workspace$Outbound | undefined;
};

/** @internal */
export const CreateWorkspaceResponse$outboundSchema: z.ZodType<
  CreateWorkspaceResponse$Outbound,
  z.ZodTypeDef,
  CreateWorkspaceResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  workspace: components.Workspace$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    workspace: "Workspace",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWorkspaceResponse$ {
  /** @deprecated use `CreateWorkspaceResponse$inboundSchema` instead. */
  export const inboundSchema = CreateWorkspaceResponse$inboundSchema;
  /** @deprecated use `CreateWorkspaceResponse$outboundSchema` instead. */
  export const outboundSchema = CreateWorkspaceResponse$outboundSchema;
  /** @deprecated use `CreateWorkspaceResponse$Outbound` instead. */
  export type Outbound = CreateWorkspaceResponse$Outbound;
}
