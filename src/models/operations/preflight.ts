/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type PreflightResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  preflightToken?: components.PreflightToken | undefined;
};

/** @internal */
export const PreflightResponse$inboundSchema: z.ZodType<
  PreflightResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  PreflightToken: components.PreflightToken$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "PreflightToken": "preflightToken",
  });
});

/** @internal */
export type PreflightResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  PreflightToken?: components.PreflightToken$Outbound | undefined;
};

/** @internal */
export const PreflightResponse$outboundSchema: z.ZodType<
  PreflightResponse$Outbound,
  z.ZodTypeDef,
  PreflightResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  preflightToken: components.PreflightToken$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    preflightToken: "PreflightToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreflightResponse$ {
  /** @deprecated use `PreflightResponse$inboundSchema` instead. */
  export const inboundSchema = PreflightResponse$inboundSchema;
  /** @deprecated use `PreflightResponse$outboundSchema` instead. */
  export const outboundSchema = PreflightResponse$outboundSchema;
  /** @deprecated use `PreflightResponse$Outbound` instead. */
  export type Outbound = PreflightResponse$Outbound;
}
