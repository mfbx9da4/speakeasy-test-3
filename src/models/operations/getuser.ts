/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetUserResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  user?: components.User | undefined;
};

/** @internal */
export const GetUserResponse$inboundSchema: z.ZodType<
  GetUserResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  User: components.User$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "User": "user",
  });
});

/** @internal */
export type GetUserResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  User?: components.User$Outbound | undefined;
};

/** @internal */
export const GetUserResponse$outboundSchema: z.ZodType<
  GetUserResponse$Outbound,
  z.ZodTypeDef,
  GetUserResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  user: components.User$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    user: "User",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUserResponse$ {
  /** @deprecated use `GetUserResponse$inboundSchema` instead. */
  export const inboundSchema = GetUserResponse$inboundSchema;
  /** @deprecated use `GetUserResponse$outboundSchema` instead. */
  export const outboundSchema = GetUserResponse$outboundSchema;
  /** @deprecated use `GetUserResponse$Outbound` instead. */
  export type Outbound = GetUserResponse$Outbound;
}
