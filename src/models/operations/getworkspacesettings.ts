/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetWorkspaceSettingsRequest = {
  /**
   * Unique identifier of the workspace.
   */
  workspaceId: string;
};

export type GetWorkspaceSettingsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  workspaceSettings?: components.WorkspaceSettings | undefined;
};

/** @internal */
export const GetWorkspaceSettingsRequest$inboundSchema: z.ZodType<
  GetWorkspaceSettingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
  });
});

/** @internal */
export type GetWorkspaceSettingsRequest$Outbound = {
  workspace_id: string;
};

/** @internal */
export const GetWorkspaceSettingsRequest$outboundSchema: z.ZodType<
  GetWorkspaceSettingsRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceSettingsRequest
> = z.object({
  workspaceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceSettingsRequest$ {
  /** @deprecated use `GetWorkspaceSettingsRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceSettingsRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceSettingsRequest$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceSettingsRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceSettingsRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceSettingsRequest$Outbound;
}

/** @internal */
export const GetWorkspaceSettingsResponse$inboundSchema: z.ZodType<
  GetWorkspaceSettingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  WorkspaceSettings: components.WorkspaceSettings$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "WorkspaceSettings": "workspaceSettings",
  });
});

/** @internal */
export type GetWorkspaceSettingsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  WorkspaceSettings?: components.WorkspaceSettings$Outbound | undefined;
};

/** @internal */
export const GetWorkspaceSettingsResponse$outboundSchema: z.ZodType<
  GetWorkspaceSettingsResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspaceSettingsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  workspaceSettings: components.WorkspaceSettings$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    workspaceSettings: "WorkspaceSettings",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceSettingsResponse$ {
  /** @deprecated use `GetWorkspaceSettingsResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceSettingsResponse$inboundSchema;
  /** @deprecated use `GetWorkspaceSettingsResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceSettingsResponse$outboundSchema;
  /** @deprecated use `GetWorkspaceSettingsResponse$Outbound` instead. */
  export type Outbound = GetWorkspaceSettingsResponse$Outbound;
}
