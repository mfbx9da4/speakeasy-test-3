/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetOrganizationRequest = {
  /**
   * Unique identifier of the organization.
   */
  organizationID: string;
};

export type GetOrganizationResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  organization?: components.Organization | undefined;
};

/** @internal */
export const GetOrganizationRequest$inboundSchema: z.ZodType<
  GetOrganizationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organizationID: z.string(),
});

/** @internal */
export type GetOrganizationRequest$Outbound = {
  organizationID: string;
};

/** @internal */
export const GetOrganizationRequest$outboundSchema: z.ZodType<
  GetOrganizationRequest$Outbound,
  z.ZodTypeDef,
  GetOrganizationRequest
> = z.object({
  organizationID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrganizationRequest$ {
  /** @deprecated use `GetOrganizationRequest$inboundSchema` instead. */
  export const inboundSchema = GetOrganizationRequest$inboundSchema;
  /** @deprecated use `GetOrganizationRequest$outboundSchema` instead. */
  export const outboundSchema = GetOrganizationRequest$outboundSchema;
  /** @deprecated use `GetOrganizationRequest$Outbound` instead. */
  export type Outbound = GetOrganizationRequest$Outbound;
}

/** @internal */
export const GetOrganizationResponse$inboundSchema: z.ZodType<
  GetOrganizationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Organization: components.Organization$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Organization": "organization",
  });
});

/** @internal */
export type GetOrganizationResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Organization?: components.Organization$Outbound | undefined;
};

/** @internal */
export const GetOrganizationResponse$outboundSchema: z.ZodType<
  GetOrganizationResponse$Outbound,
  z.ZodTypeDef,
  GetOrganizationResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  organization: components.Organization$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    organization: "Organization",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrganizationResponse$ {
  /** @deprecated use `GetOrganizationResponse$inboundSchema` instead. */
  export const inboundSchema = GetOrganizationResponse$inboundSchema;
  /** @deprecated use `GetOrganizationResponse$outboundSchema` instead. */
  export const outboundSchema = GetOrganizationResponse$outboundSchema;
  /** @deprecated use `GetOrganizationResponse$Outbound` instead. */
  export type Outbound = GetOrganizationResponse$Outbound;
}
