/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";

export type GenerateOpenApiSpecRequest = {
  /**
   * The ID of the Api to generate an OpenAPI specification for.
   */
  apiID: string;
  /**
   * The version ID of the Api to generate an OpenAPI specification for.
   */
  versionID: string;
};

export type GenerateOpenApiSpecResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  generateOpenApiSpecDiff?: components.GenerateOpenApiSpecDiff | undefined;
  /**
   * Default error response
   */
  error?: errors.ErrorT | undefined;
};

/** @internal */
export const GenerateOpenApiSpecRequest$inboundSchema: z.ZodType<
  GenerateOpenApiSpecRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
});

/** @internal */
export type GenerateOpenApiSpecRequest$Outbound = {
  apiID: string;
  versionID: string;
};

/** @internal */
export const GenerateOpenApiSpecRequest$outboundSchema: z.ZodType<
  GenerateOpenApiSpecRequest$Outbound,
  z.ZodTypeDef,
  GenerateOpenApiSpecRequest
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateOpenApiSpecRequest$ {
  /** @deprecated use `GenerateOpenApiSpecRequest$inboundSchema` instead. */
  export const inboundSchema = GenerateOpenApiSpecRequest$inboundSchema;
  /** @deprecated use `GenerateOpenApiSpecRequest$outboundSchema` instead. */
  export const outboundSchema = GenerateOpenApiSpecRequest$outboundSchema;
  /** @deprecated use `GenerateOpenApiSpecRequest$Outbound` instead. */
  export type Outbound = GenerateOpenApiSpecRequest$Outbound;
}

/** @internal */
export const GenerateOpenApiSpecResponse$inboundSchema: z.ZodType<
  GenerateOpenApiSpecResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  GenerateOpenApiSpecDiff: components.GenerateOpenApiSpecDiff$inboundSchema
    .optional(),
  Error: errors.ErrorT$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "GenerateOpenApiSpecDiff": "generateOpenApiSpecDiff",
    "Error": "error",
  });
});

/** @internal */
export type GenerateOpenApiSpecResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  GenerateOpenApiSpecDiff?:
    | components.GenerateOpenApiSpecDiff$Outbound
    | undefined;
  Error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const GenerateOpenApiSpecResponse$outboundSchema: z.ZodType<
  GenerateOpenApiSpecResponse$Outbound,
  z.ZodTypeDef,
  GenerateOpenApiSpecResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  generateOpenApiSpecDiff: components.GenerateOpenApiSpecDiff$outboundSchema
    .optional(),
  error: errors.ErrorT$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    generateOpenApiSpecDiff: "GenerateOpenApiSpecDiff",
    error: "Error",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateOpenApiSpecResponse$ {
  /** @deprecated use `GenerateOpenApiSpecResponse$inboundSchema` instead. */
  export const inboundSchema = GenerateOpenApiSpecResponse$inboundSchema;
  /** @deprecated use `GenerateOpenApiSpecResponse$outboundSchema` instead. */
  export const outboundSchema = GenerateOpenApiSpecResponse$outboundSchema;
  /** @deprecated use `GenerateOpenApiSpecResponse$Outbound` instead. */
  export type Outbound = GenerateOpenApiSpecResponse$Outbound;
}
