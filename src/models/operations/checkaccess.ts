/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";

export type CheckAccessRequest = {
  org: string;
  repo: string;
};

export type CheckAccessResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Default error response
   */
  error?: errors.ErrorT | undefined;
};

/** @internal */
export const CheckAccessRequest$inboundSchema: z.ZodType<
  CheckAccessRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org: z.string(),
  repo: z.string(),
});

/** @internal */
export type CheckAccessRequest$Outbound = {
  org: string;
  repo: string;
};

/** @internal */
export const CheckAccessRequest$outboundSchema: z.ZodType<
  CheckAccessRequest$Outbound,
  z.ZodTypeDef,
  CheckAccessRequest
> = z.object({
  org: z.string(),
  repo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckAccessRequest$ {
  /** @deprecated use `CheckAccessRequest$inboundSchema` instead. */
  export const inboundSchema = CheckAccessRequest$inboundSchema;
  /** @deprecated use `CheckAccessRequest$outboundSchema` instead. */
  export const outboundSchema = CheckAccessRequest$outboundSchema;
  /** @deprecated use `CheckAccessRequest$Outbound` instead. */
  export type Outbound = CheckAccessRequest$Outbound;
}

/** @internal */
export const CheckAccessResponse$inboundSchema: z.ZodType<
  CheckAccessResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Error: errors.ErrorT$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Error": "error",
  });
});

/** @internal */
export type CheckAccessResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const CheckAccessResponse$outboundSchema: z.ZodType<
  CheckAccessResponse$Outbound,
  z.ZodTypeDef,
  CheckAccessResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  error: errors.ErrorT$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    error: "Error",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckAccessResponse$ {
  /** @deprecated use `CheckAccessResponse$inboundSchema` instead. */
  export const inboundSchema = CheckAccessResponse$inboundSchema;
  /** @deprecated use `CheckAccessResponse$outboundSchema` instead. */
  export const outboundSchema = CheckAccessResponse$outboundSchema;
  /** @deprecated use `CheckAccessResponse$Outbound` instead. */
  export type Outbound = CheckAccessResponse$Outbound;
}
