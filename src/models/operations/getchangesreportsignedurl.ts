/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetChangesReportSignedUrlRequest = {
  /**
   * The checksum of the document to retrieve the signed access url for.
   */
  documentChecksum: string;
};

/**
 * OK
 */
export type GetChangesReportSignedUrlSignedAccess = {
  url: string;
};

export type GetChangesReportSignedUrlResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  signedAccess?: GetChangesReportSignedUrlSignedAccess | undefined;
};

/** @internal */
export const GetChangesReportSignedUrlRequest$inboundSchema: z.ZodType<
  GetChangesReportSignedUrlRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentChecksum: z.string(),
});

/** @internal */
export type GetChangesReportSignedUrlRequest$Outbound = {
  documentChecksum: string;
};

/** @internal */
export const GetChangesReportSignedUrlRequest$outboundSchema: z.ZodType<
  GetChangesReportSignedUrlRequest$Outbound,
  z.ZodTypeDef,
  GetChangesReportSignedUrlRequest
> = z.object({
  documentChecksum: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChangesReportSignedUrlRequest$ {
  /** @deprecated use `GetChangesReportSignedUrlRequest$inboundSchema` instead. */
  export const inboundSchema = GetChangesReportSignedUrlRequest$inboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlRequest$outboundSchema` instead. */
  export const outboundSchema = GetChangesReportSignedUrlRequest$outboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlRequest$Outbound` instead. */
  export type Outbound = GetChangesReportSignedUrlRequest$Outbound;
}

/** @internal */
export const GetChangesReportSignedUrlSignedAccess$inboundSchema: z.ZodType<
  GetChangesReportSignedUrlSignedAccess,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
});

/** @internal */
export type GetChangesReportSignedUrlSignedAccess$Outbound = {
  url: string;
};

/** @internal */
export const GetChangesReportSignedUrlSignedAccess$outboundSchema: z.ZodType<
  GetChangesReportSignedUrlSignedAccess$Outbound,
  z.ZodTypeDef,
  GetChangesReportSignedUrlSignedAccess
> = z.object({
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChangesReportSignedUrlSignedAccess$ {
  /** @deprecated use `GetChangesReportSignedUrlSignedAccess$inboundSchema` instead. */
  export const inboundSchema =
    GetChangesReportSignedUrlSignedAccess$inboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlSignedAccess$outboundSchema` instead. */
  export const outboundSchema =
    GetChangesReportSignedUrlSignedAccess$outboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlSignedAccess$Outbound` instead. */
  export type Outbound = GetChangesReportSignedUrlSignedAccess$Outbound;
}

/** @internal */
export const GetChangesReportSignedUrlResponse$inboundSchema: z.ZodType<
  GetChangesReportSignedUrlResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  signedAccess: z.lazy(() =>
    GetChangesReportSignedUrlSignedAccess$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
  });
});

/** @internal */
export type GetChangesReportSignedUrlResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  signedAccess?: GetChangesReportSignedUrlSignedAccess$Outbound | undefined;
};

/** @internal */
export const GetChangesReportSignedUrlResponse$outboundSchema: z.ZodType<
  GetChangesReportSignedUrlResponse$Outbound,
  z.ZodTypeDef,
  GetChangesReportSignedUrlResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  signedAccess: z.lazy(() =>
    GetChangesReportSignedUrlSignedAccess$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChangesReportSignedUrlResponse$ {
  /** @deprecated use `GetChangesReportSignedUrlResponse$inboundSchema` instead. */
  export const inboundSchema = GetChangesReportSignedUrlResponse$inboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetChangesReportSignedUrlResponse$outboundSchema;
  /** @deprecated use `GetChangesReportSignedUrlResponse$Outbound` instead. */
  export type Outbound = GetChangesReportSignedUrlResponse$Outbound;
}
