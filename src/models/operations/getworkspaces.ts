/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetWorkspacesResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  workspaces?: Array<components.Workspace> | undefined;
};

/** @internal */
export const GetWorkspacesResponse$inboundSchema: z.ZodType<
  GetWorkspacesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Workspaces: z.array(components.Workspace$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Workspaces": "workspaces",
  });
});

/** @internal */
export type GetWorkspacesResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Workspaces?: Array<components.Workspace$Outbound> | undefined;
};

/** @internal */
export const GetWorkspacesResponse$outboundSchema: z.ZodType<
  GetWorkspacesResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspacesResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  workspaces: z.array(components.Workspace$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    workspaces: "Workspaces",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspacesResponse$ {
  /** @deprecated use `GetWorkspacesResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspacesResponse$inboundSchema;
  /** @deprecated use `GetWorkspacesResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkspacesResponse$outboundSchema;
  /** @deprecated use `GetWorkspacesResponse$Outbound` instead. */
  export type Outbound = GetWorkspacesResponse$Outbound;
}
