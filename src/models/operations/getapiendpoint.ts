/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type GetApiEndpointRequest = {
  /**
   * The ID of the Api the ApiEndpoint belongs to.
   */
  apiID: string;
  /**
   * The version ID of the Api the ApiEndpoint belongs to.
   */
  versionID: string;
  /**
   * The ID of the ApiEndpoint to retrieve.
   */
  apiEndpointID: string;
};

export type GetApiEndpointResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  apiEndpoint?: components.ApiEndpoint | undefined;
};

/** @internal */
export const GetApiEndpointRequest$inboundSchema: z.ZodType<
  GetApiEndpointRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
  apiEndpointID: z.string(),
});

/** @internal */
export type GetApiEndpointRequest$Outbound = {
  apiID: string;
  versionID: string;
  apiEndpointID: string;
};

/** @internal */
export const GetApiEndpointRequest$outboundSchema: z.ZodType<
  GetApiEndpointRequest$Outbound,
  z.ZodTypeDef,
  GetApiEndpointRequest
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
  apiEndpointID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiEndpointRequest$ {
  /** @deprecated use `GetApiEndpointRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiEndpointRequest$inboundSchema;
  /** @deprecated use `GetApiEndpointRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiEndpointRequest$outboundSchema;
  /** @deprecated use `GetApiEndpointRequest$Outbound` instead. */
  export type Outbound = GetApiEndpointRequest$Outbound;
}

/** @internal */
export const GetApiEndpointResponse$inboundSchema: z.ZodType<
  GetApiEndpointResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  ApiEndpoint: components.ApiEndpoint$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "ApiEndpoint": "apiEndpoint",
  });
});

/** @internal */
export type GetApiEndpointResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  ApiEndpoint?: components.ApiEndpoint$Outbound | undefined;
};

/** @internal */
export const GetApiEndpointResponse$outboundSchema: z.ZodType<
  GetApiEndpointResponse$Outbound,
  z.ZodTypeDef,
  GetApiEndpointResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  apiEndpoint: components.ApiEndpoint$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    apiEndpoint: "ApiEndpoint",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiEndpointResponse$ {
  /** @deprecated use `GetApiEndpointResponse$inboundSchema` instead. */
  export const inboundSchema = GetApiEndpointResponse$inboundSchema;
  /** @deprecated use `GetApiEndpointResponse$outboundSchema` instead. */
  export const outboundSchema = GetApiEndpointResponse$outboundSchema;
  /** @deprecated use `GetApiEndpointResponse$Outbound` instead. */
  export type Outbound = GetApiEndpointResponse$Outbound;
}
