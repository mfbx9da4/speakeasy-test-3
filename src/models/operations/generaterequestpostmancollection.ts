/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as errors from "../errors/index.js";

export type GenerateRequestPostmanCollectionRequest = {
  /**
   * The ID of the request to retrieve.
   */
  requestID: string;
};

export type GenerateRequestPostmanCollectionResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  postmanCollection?: ReadableStream<Uint8Array> | undefined;
  /**
   * Default error response
   */
  error?: errors.ErrorT | undefined;
};

/** @internal */
export const GenerateRequestPostmanCollectionRequest$inboundSchema: z.ZodType<
  GenerateRequestPostmanCollectionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  requestID: z.string(),
});

/** @internal */
export type GenerateRequestPostmanCollectionRequest$Outbound = {
  requestID: string;
};

/** @internal */
export const GenerateRequestPostmanCollectionRequest$outboundSchema: z.ZodType<
  GenerateRequestPostmanCollectionRequest$Outbound,
  z.ZodTypeDef,
  GenerateRequestPostmanCollectionRequest
> = z.object({
  requestID: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateRequestPostmanCollectionRequest$ {
  /** @deprecated use `GenerateRequestPostmanCollectionRequest$inboundSchema` instead. */
  export const inboundSchema =
    GenerateRequestPostmanCollectionRequest$inboundSchema;
  /** @deprecated use `GenerateRequestPostmanCollectionRequest$outboundSchema` instead. */
  export const outboundSchema =
    GenerateRequestPostmanCollectionRequest$outboundSchema;
  /** @deprecated use `GenerateRequestPostmanCollectionRequest$Outbound` instead. */
  export type Outbound = GenerateRequestPostmanCollectionRequest$Outbound;
}

/** @internal */
export const GenerateRequestPostmanCollectionResponse$inboundSchema: z.ZodType<
  GenerateRequestPostmanCollectionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  PostmanCollection: z.instanceof(ReadableStream<Uint8Array>).optional(),
  Error: errors.ErrorT$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "PostmanCollection": "postmanCollection",
    "Error": "error",
  });
});

/** @internal */
export type GenerateRequestPostmanCollectionResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  PostmanCollection?: ReadableStream<Uint8Array> | undefined;
  Error?: errors.ErrorT$Outbound | undefined;
};

/** @internal */
export const GenerateRequestPostmanCollectionResponse$outboundSchema: z.ZodType<
  GenerateRequestPostmanCollectionResponse$Outbound,
  z.ZodTypeDef,
  GenerateRequestPostmanCollectionResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  postmanCollection: z.instanceof(ReadableStream<Uint8Array>).optional(),
  error: errors.ErrorT$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    postmanCollection: "PostmanCollection",
    error: "Error",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateRequestPostmanCollectionResponse$ {
  /** @deprecated use `GenerateRequestPostmanCollectionResponse$inboundSchema` instead. */
  export const inboundSchema =
    GenerateRequestPostmanCollectionResponse$inboundSchema;
  /** @deprecated use `GenerateRequestPostmanCollectionResponse$outboundSchema` instead. */
  export const outboundSchema =
    GenerateRequestPostmanCollectionResponse$outboundSchema;
  /** @deprecated use `GenerateRequestPostmanCollectionResponse$Outbound` instead. */
  export type Outbound = GenerateRequestPostmanCollectionResponse$Outbound;
}
