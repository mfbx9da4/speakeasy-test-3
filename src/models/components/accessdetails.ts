/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export enum Level {
  Allowed = "allowed",
  Warning = "warning",
  Blocked = "blocked",
}

export type AccessDetails = {
  generationAllowed: boolean;
  message: string;
  level?: Level | undefined;
};

/** @internal */
export const Level$inboundSchema: z.ZodNativeEnum<typeof Level> = z.nativeEnum(
  Level,
);

/** @internal */
export const Level$outboundSchema: z.ZodNativeEnum<typeof Level> =
  Level$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Level$ {
  /** @deprecated use `Level$inboundSchema` instead. */
  export const inboundSchema = Level$inboundSchema;
  /** @deprecated use `Level$outboundSchema` instead. */
  export const outboundSchema = Level$outboundSchema;
}

/** @internal */
export const AccessDetails$inboundSchema: z.ZodType<
  AccessDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  generation_allowed: z.boolean(),
  message: z.string(),
  level: Level$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "generation_allowed": "generationAllowed",
  });
});

/** @internal */
export type AccessDetails$Outbound = {
  generation_allowed: boolean;
  message: string;
  level?: string | undefined;
};

/** @internal */
export const AccessDetails$outboundSchema: z.ZodType<
  AccessDetails$Outbound,
  z.ZodTypeDef,
  AccessDetails
> = z.object({
  generationAllowed: z.boolean(),
  message: z.string(),
  level: Level$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    generationAllowed: "generation_allowed",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccessDetails$ {
  /** @deprecated use `AccessDetails$inboundSchema` instead. */
  export const inboundSchema = AccessDetails$inboundSchema;
  /** @deprecated use `AccessDetails$outboundSchema` instead. */
  export const outboundSchema = AccessDetails$outboundSchema;
  /** @deprecated use `AccessDetails$Outbound` instead. */
  export type Outbound = AccessDetails$Outbound;
}
